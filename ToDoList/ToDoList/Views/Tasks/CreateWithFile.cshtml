@model ToDoList.Models.TaskViewModel

@{
    ViewBag.Title = "CreateWithFile";
}


<div class="row">
    <div class="col-md-3">
    </div>
    <div class="col-md-6">
        @using (Html.BeginForm("CreateWithFile", "Tasks", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Create new task</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TaskToDo.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaskToDo.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaskToDo.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.TaskToDo.IsDone)
                            @Html.LabelFor(model => model.TaskToDo.IsDone, htmlAttributes: new { @class = "control-label" })

                            @Html.ValidationMessageFor(model => model.TaskToDo.IsDone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.TaskToDo.IsFavorite)
                            @Html.LabelFor(model => model.TaskToDo.IsFavorite, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.TaskToDo.IsFavorite, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.FolderId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.FolderId, Model.AvailableFolders, htmlAttributes: new { @class = "form-control" })

                    </div>
                </div>
                @Html.TextBox("file", "", new { type = "file" }) <br />
                <br />
                <br />



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "IndexWithFolders")
        </div>
    </div>
    <div class="col-md-3">
    </div>
</div>

       

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

        <script>

        </script>


